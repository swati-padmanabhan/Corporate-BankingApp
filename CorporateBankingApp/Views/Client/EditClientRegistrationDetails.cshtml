@model CorporateBankingApp.DTOs.ClientDTO

@{
    ViewBag.Title = "Edit Client Registration Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-xl px-4 mt-4">
    <div class="row">
        <div class="col-xl-4">
            <!-- Client Overview card -->
            <div class="card mb-4">
                <div class="card-header">Client Overview</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.CompanyName</h5>
                    <p class="card-text">Email: @Model.Email</p>
                    <p class="card-text">Location: @Model.Location</p>
                    <p class="card-text">Balance: $@Model.Balance</p>

                    <!-- Additional alerts or notifications -->
                    <div class="alert alert-warning">
                        <strong>Notice:</strong> Please ensure all documents are up to date to avoid service disruptions.
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-8">
            <!-- Account details card -->
            <div class="card mb-4">
                <div class="card-header">Account Details</div>
                <div class="card-body">
                    @using (Html.BeginForm("EditClientRegistrationDetails", "Client", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <!-- Email -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Email, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <!-- Company Name -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.CompanyName, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                            </div>

                            <!-- Location -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Location, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>

                            <!-- Contact Information -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.ContactInformation, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.ContactInformation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactInformation, "", new { @class = "text-danger" })
                            </div>

                            <!-- Account Number -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.AccountNumber, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                            </div>

                            <!-- Client IFSC -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.ClientIFSC, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.ClientIFSC, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClientIFSC, "", new { @class = "text-danger" })
                            </div>

                            <!-- Balance -->
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Balance, new { @class = "small mb-1" })
                                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                            </div>

                            <!-- Document Uploads -->
                            <div class="mb-4">
                                <h5>Documents</h5>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        @Html.Label("Company ID Proof", htmlAttributes: new { @class = "small mb-1" })
                                        @if (Model.Documents != null && Model.Documents.Any(d => d.DocumentType == "Company Id Proof"))
                                        {
                                            <p>
                                                Current Document: <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#documentModal" onclick="getDocument('@Url.Content(Model.Documents.First(d => d.DocumentType == "Company Id Proof").FilePath)')">View</a>
                                            </p>
                                        }
                                        <input type="file" name="uploadedFiles1" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.Document1, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.Label("Address Proof", htmlAttributes: new { @class = "small mb-1" })
                                        @if (Model.Documents != null && Model.Documents.Any(d => d.DocumentType == "Address Proof"))
                                        {
                                            <p>
                                                Current Document: <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#documentModal" onclick="getDocument('@Url.Content(Model.Documents.First(d => d.DocumentType == "Address Proof").FilePath)')">View</a>
                                            </p>
                                        }
                                        <input type="file" name="uploadedFiles2" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.Document2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <!-- Save changes button with icon -->
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-save"></i> Save Changes
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="documentModal" tabindex="-1" aria-labelledby="documentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header primary-bg">
                <h5 class="modal-title text-light" id="documentModalLabel">Client Document</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="documentFrame" src="" class="w-100" scrolling="yes"></iframe>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/Script.js"></script>

