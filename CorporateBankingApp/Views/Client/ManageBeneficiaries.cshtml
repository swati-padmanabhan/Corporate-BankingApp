@model CorporateBankingApp.DTOs.BeneficiaryDTO

@{
    ViewBag.Title = "Manage Beneficiaries";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid" id="beneficiaryList">
    <h2 class="text-center my-4 pt-3">Manage Beneficiaries</h2>

    <div class="text-center mb-4">
        <button type="button" class="btn primary-bg text-white" id="btnAddBeneficiary" data-bs-toggle="modal" data-bs-target="#addBeneficiaryModal">
            <i class="bi bi-plus-circle"></i> Add New Beneficiary
        </button>

        <a href="@Url.Action("InboundBeneficiaries", "Client")" class="btn btn-primary">View InBound Beneficiaries</a>

    </div>

    <div class="table-responsive">
        <div class="my-4 float-start w-75">
            <input type="text" id="searchInput" placeholder="Search beneficiaries..." class="form-control" onkeyup="searchUsers()" />
        </div>
        <div class="dropdown my-4 float-end">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-filter me-1"></i> Filter
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" onclick="filterAll()">All</a></li>
                <li><a class="dropdown-item" onclick="filterInbound()">INBOUND</a></li>
                <li><a class="dropdown-item" onclick="filterOutbound()">OUTBOUND</a></li>
            </ul>
        </div>

        <table class="table table-striped table-bordered text-center">
            <thead class="table-light">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.BeneficiaryName)</th>
                    <th>@Html.DisplayNameFor(model => model.AccountNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.BankIFSC)</th>
                    <th>@Html.DisplayNameFor(model => model.BeneficiaryStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.BeneficiaryType)</th>
                    <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                    <th>Documents</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="beneficiaryTblBody">
                <!-- Data comes from AJAX -->
            </tbody>
        </table>
    </div>
</div>

<!-- Add Beneficiary Modal -->
<div class="modal fade" id="addBeneficiaryModal" tabindex="-1" aria-labelledby="addBeneficiaryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header primary-bg">
                <h5 class="modal-title" id="addBeneficiaryModalLabel">Add New Beneficiary</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.Partial("_AddBeneficiaryPartial")
            </div>
        </div>
    </div>
</div>



<div id="editBeneficiary" style="display:none" class="container">
    @Html.Partial("_EditBeneficiaryPartial")
</div>

<script src="~/Scripts/crudForOutBound.js"></script>
<script>
    $(document).ready(() => {
        loadOutboundBeneficiaries();
    });

    $("#btnAddBeneficiary").click(function () {
        $("#addBeneficiaryModal").modal('show');
    });

    // Function to open the edit modal (You need to implement this function)
    function openEditBeneficiaryModal(beneficiaryId) {
        // Load beneficiary data and show modal
        $("#editBeneficiaryModal").modal('show');
    }

    // Document modal closing button
    $('.btn-close').on('click', function () {
        $('#documentModal').modal('hide');
    });
</script>
