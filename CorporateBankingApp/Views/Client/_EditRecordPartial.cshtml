@model CorporateBankingApp.Models.Employee

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="card mt-5">
            <div class="card-body px-5">
                <h4 class="text-center my-4">Edit Employee</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id, new { id = "editEmployeeId" })

                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control mb-4", id = "newFirstName" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control mb-4", id = "newLastName" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control mb-4", id = "newEmail" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control mb-4", id = "newPhone" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control mb-4", id = "newDesignation" } })
                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label mb-2 ms-2" })
                        <span class="required-asterisk">*</span>
                        <div class="">
                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control mb-4", id = "newSalary" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-flex justify-content-between mt-4">
                        <input type="submit" value="Save" class="btn primary-bg text-white" id="btnEdit" />
                        <input type="button" value="Go Back" class="btn btn-secondary" onclick="goBack()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function goBack() {
        window.location.href = '@Url.Action("ManageEmployees", "Client")'; // Adjust as needed
    }
</script>
