@model IEnumerable<CorporateBankingApp.DTOs.EmployeeReportDTO>

@{
    ViewBag.Title = "Employee Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Your existing CSS styles */
</style>

<div class="container">
    <h2 class="text-center">Employee Report</h2>
    <div class="row my-4">
        <div class="row mb-3">
            <div class="col">
                <label for="fromDate">From Date:</label>
                <input type="date" id="fromDate" class="form-control" />
            </div>
            <div class="col">
                <label for="toDate">To Date:</label>
                <input type="date" id="toDate" class="form-control" />
            </div>
            <div class="col">
                <label>&nbsp;</label>
                <button class="btn btn-primary w-100" onclick="applyDateFilter()">Filter by Date</button>
            </div>
        </div>
    </div>
    <div class="my-4 float-start w-75">
        <input type="text" id="searchInput" placeholder="Search users..." class="form-control" onkeyup="applySearch()" />
    </div>

    <div class="dropdown my-4 float-end">
        <button class="btn rounded-3 wrapper" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="bi bi-filter me-1"></i>
            <span>Filter</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
            <li><a class="dropdown-item" onclick="filterByStatus('')">All</a></li>
            <li><a class="dropdown-item" onclick="filterByStatus('PENDING')">Pending</a></li>
            <li><a class="dropdown-item" onclick="filterByStatus('APPROVED')">Approved</a></li>
            <li><a class="dropdown-item" onclick="filterByStatus('REJECTED')">Rejected</a></li>
            <li><a class="dropdown-item" onclick="filterByStatus('No status')">No status</a></li>
        </ul>
    </div>

    <table class="table primary-bg" id="employeeTable">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Designation</th>
                <th>Salary</th>
                <th>Disbursement Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Designation)</td>
                    <td>@Html.DisplayFor(modelItem => item.Salary)</td>
                    <td>
                        @if (item.DisbursementDate.HasValue)
                        {
                            @item.DisbursementDate.Value.ToString("dd/MM/yyyy")
                        }
                        else
                        {
                            <span>No disbursements</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="@(i == ViewBag.CurrentPage ? "active" : "")">
                    <a href="@Url.Action("EmployeeReport", new { page = i, pageSize = 10 })">@i</a>
                </li>
            }
        </ul>
    </nav>

    <a href="@Url.Action("DownloadEmployeeReport", "Report")" class="btn primary-bg text-white">Download PDF</a>
</div>

<script>
    // Store original data in a variable
    const originalData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
    let filteredData = originalData; // Data after search and filter

    function renderTable(data) {
        const tableBody = $("#employeeTable tbody");
        tableBody.empty(); // Clear existing rows

        if (data.length > 0) {
            $.each(data, function (index, employee) {
                const row = `<tr>
<td>${employee.FirstName}</td>
<td>${employee.LastName}</td>
<td>${employee.Email}</td>
<td>${employee.Designation}</td>
<td>${employee.Salary}</td>
<td>${employee.DisbursementDate ? new Date(employee.DisbursementDate).toLocaleDateString('en-GB') : 'No disbursements'}</td>
</tr>`;
                tableBody.append(row);
            });
        } else {
            tableBody.append(`<tr><td colspan='6' class="text-center">No employees found.</td></tr>`);
        }
    }

    function applySearch() {
        const searchValue = $("#searchInput").val().toLowerCase();
        filteredData = originalData.filter(employee =>
            employee.FirstName.toLowerCase().includes(searchValue) ||
            employee.LastName.toLowerCase().includes(searchValue) ||
            employee.Email.toLowerCase().includes(searchValue) ||
            employee.Designation.toLowerCase().includes(searchValue)
        );

        renderTable(filteredData); // Render the filtered data
    }

    function filterByStatus(status) {
        const searchValue = $("#searchInput").val().toLowerCase();
        filteredData = originalData.filter(employee => {
            const matchesSearch =
                employee.FirstName.toLowerCase().includes(searchValue) ||
                employee.LastName.toLowerCase().includes(searchValue) ||
                employee.Email.toLowerCase().includes(searchValue) ||
                employee.Designation.toLowerCase().includes(searchValue);

            // Status filter is not needed anymore
            return matchesSearch; // Only search matches now
        });

        renderTable(filteredData); // Render the filtered data
    }

    function applyDateFilter() {
        const fromDate = $('#fromDate').val();
        const toDate = $('#toDate').val();
        const searchEmail = $('#searchInput').val();

        if (!fromDate || !toDate) {
            alert('Please select both From and To dates.');
            return;
        }

        window.location.href = `@Url.Action("EmployeeReport")?searchEmail=${searchEmail}&fromDate=${fromDate}&toDate=${toDate}`;
    }

    $(document).ready(function () {
        renderTable(originalData);

        $("#searchInput").on("keyup", applySearch);
    });
</script>
